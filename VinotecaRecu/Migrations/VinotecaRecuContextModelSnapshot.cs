// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VinotecaRecu.Data;

#nullable disable

namespace VinotecaRecu.Migrations
{
    [DbContext(typeof(VinotecaRecuContext))]
    partial class VinotecaRecuContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("CataWine", b =>
                {
                    b.Property<int>("CatasId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WinesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CatasId", "WinesId");

                    b.HasIndex("WinesId");

                    b.ToTable("CataWine", (string)null);
                });

            modelBuilder.Entity("VinotecaRecu.Data.Entities.Cata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Invitados")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Catas");
                });

            modelBuilder.Entity("VinotecaRecu.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Rol")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "Pa$$w0rd",
                            Rol = 0,
                            Username = "mgs@gmail.com"
                        },
                        new
                        {
                            Id = 2,
                            Password = "Cl4ve!",
                            Rol = 0,
                            Username = "jhonwick@gmail.com"
                        });
                });

            modelBuilder.Entity("VinotecaRecu.Data.Entities.Wine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Variety")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Wines");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 11, 28, 4, 15, 49, 312, DateTimeKind.Utc).AddTicks(5486),
                            Name = "Malbec",
                            Region = "Mendoza",
                            Stock = 30,
                            Variety = "Malbec",
                            Year = 2020
                        },
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 11, 28, 4, 15, 49, 312, DateTimeKind.Utc).AddTicks(5227),
                            Name = "Cabernet Sauvignon",
                            Region = "Mendoza",
                            Stock = 50,
                            Variety = "Cabernet Sauvignon",
                            Year = 2018
                        });
                });

            modelBuilder.Entity("CataWine", b =>
                {
                    b.HasOne("VinotecaRecu.Data.Entities.Cata", null)
                        .WithMany()
                        .HasForeignKey("CatasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VinotecaRecu.Data.Entities.Wine", null)
                        .WithMany()
                        .HasForeignKey("WinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
